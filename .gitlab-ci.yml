# Copyright 2025 ETH Zurich and University of Bologna.
# Licensed under the Apache License, Version 2.0, see LICENSE.apache for details.
# SPDX-License-Identifier: Apache-2.0
#
# Sergio Mazzola <smazzola@iis.ee.ethz.ch>

variables:
  # Tooling
  BENDER: bender
  QUESTA: questa-2022.3
  GCC_DIR: /usr/pack/riscv-1.0-kgf
  # CI settings
  GIT_STRATEGY: "clone"
  GIT_CLEAN_FLAGS: "-ffd"
  CI_DEBUG_TRACE: "false"
  # Enable colors in CI terminal
  TERM: ansi
  FORCE_COLOR: 1

.default:
  before_script:
    # RISC-V GCC toolchain paths
    - export PATH="${GCC_DIR}/default/bin:${GCC_DIR}/STARTUP:${PATH}"
  artifacts:
    when: always
    expire_in: 3 days

#NOTE: This simple one-stage CI recompiles the same hardware multiple times for each test: this is
# not ideal but grants the simulation of the correct hardware config, as the current GitLab version
# (16.0.0) does not support proper artifact propagation with parallel:matrix jobs.

# Template to compile and run software tests
.test-template: &test-template
  extends: .default
  script:
    # Print config
    - echo "Application = \"$TEST\""
    - echo "Testbench = \"$TB_TOP\""
    - echo "Hardware configuration ="
    - echo "  DATA_MEM_TYPE = \"$DATA_MEM_TYPE\""
    - echo "  INSTR_MEM_TYPE = \"$INSTR_MEM_TYPE\""
    - echo "  ACT_MEM_TYPE = \"$ACT_MEM_TYPE\""
    # Compile hardware
    - make checkout
    - make snitch_bootrom
    - make compile-vsim
    - sim_top_level=$TB_TOP make opt-vsim
    # Compile software
    - make sw/apps/$TEST.dump
    - make sw/apps/$TEST.{instr,data}_mem.bin
    # Run simulation
    - GUI=0 APP=$TEST sim_top_level=$TB_TOP make run-vsim
    - utils/vsim_ret.sh target/sim/vsim/transcript
  artifacts:
    paths: [ "hw", "sw", "target/sim/vsim" ]
    exclude: [ "target/sim/vsim/work/**/*", "target/sim/vsim/work", "target/sim/vsim/*.wlf" ]
    expire_in: 1 week

# Define hardware configs, tb, and tests to run on them
test-vsim:
  <<: *test-template
  parallel:
    matrix:
      # Use SCM memory, run all tests
      - DATA_MEM_TYPE: scm
        INSTR_MEM_TYPE: scm
        ACT_MEM_TYPE: scm
        TB_TOP: tb_wl_top
        TEST: 
          - test_data_mem
          - test_data_mem_load_subword
          - test_data_mem_store_subword
          - test_hwpe_datamover
          - test_axi_lite_master
      # Use SRAM cuts, run all tests
      - DATA_MEM_TYPE: sram
        INSTR_MEM_TYPE: sram
        ACT_MEM_TYPE: sram
        TB_TOP: tb_wl_top
        TEST: 
          - test_data_mem
          - test_data_mem_load_subword
          - test_data_mem_store_subword
          - test_hwpe_datamover
          - test_axi_lite_master
